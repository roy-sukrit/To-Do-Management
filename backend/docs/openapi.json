{
  "openapi": "3.0.0",
  "info": {
    "title": "Todo API",
    "version": "1.0.0",
    "description": "API for managing todo items and categories."
  },
  "servers": [
    {
      "description": "SwaggerHub API Auto Mocking",
      "url": "https://virtserver.swaggerhub.com/ROYSUKRIT78/todo/1.0.0"
    },
    {
      "url": "http://ec2-54-91-201-1.compute-1.amazonaws.com:8000/api"
    }
  ],
  "paths": {
    "/todos": {
      "post": {
        "summary": "Create Todo",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "user@example.com"
                  },
                  "text": {
                    "type": "string",
                    "example": "My first todo"
                  },
                  "done": {
                    "type": "boolean",
                    "example": false
                  },
                  "categories": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "type": "string",
                          "example": "Work"
                        },
                        "slug": {
                          "type": "string",
                          "example": "work"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Todo created successfully"
          },
          "400": {
            "description": "Bad request"
          }
        }
      },
      "get": {
        "summary": "Get All Todos",
        "responses": {
          "200": {
            "description": "A list of todos",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "67263c328fbdb449d71bfe78"
                      },
                      "text": {
                        "type": "string",
                        "example": "My first todo"
                      },
                      "done": {
                        "type": "boolean",
                        "example": false
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/todos/{id}": {
      "get": {
        "summary": "Get Todo by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Todo found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "text": {
                      "type": "string",
                      "example": "My first todo"
                    },
                    "done": {
                      "type": "boolean",
                      "example": false
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Todo not found"
          }
        }
      },
      "put": {
        "summary": "Update Todo By Id",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "example": "67225693c4aff1821c1e138a"
                  },
                  "email": {
                    "type": "string",
                    "example": "user@example.com"
                  },
                  "text": {
                    "type": "string",
                    "example": "My first todo Updated Again"
                  },
                  "done": {
                    "type": "boolean",
                    "example": false
                  },
                  "categories": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "example": "67263cfd8fbdb449d71bfe7c"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Todo updated successfully"
            },
            "404": {
              "description": "Todo not found"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Todo",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Todo deleted successfully"
          },
          "404": {
            "description": "Todo not found"
          }
        }
      }
    },
    "/categories": {
      "post": {
        "summary": "Create Category",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "SukritCategory2"
                  },
                  "slug": {
                    "type": "string",
                    "example": "suk2"
                  },
                  "email": {
                    "type": "string",
                    "example": "roysukrit79@gmail.com"
                  }
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Category created successfully"
            },
            "400": {
              "description": "Bad request"
            }
          }
        }
      },
      "get": {
        "summary": "Get All Categories",
        "responses": {
          "200": {
            "description": "A list of categories",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "67263cfd8fbdb449d71bfe7c"
                      },
                      "name": {
                        "type": "string",
                        "example": "Category Name"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update a category by ID",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "roysukrit79@gmail.com"
                  },
                  "categoryId": {
                    "type": "string",
                    "example": "67263cfd8fbdb449d71bfe7c"
                  },
                  "updateData": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "example": "Updated Category Name"
                      },
                      "slug": {
                        "type": "string",
                        "example": "updated-category-slug"
                      }
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Category updated successfully"
            },
            "404": {
              "description": "Category not found"
            },
            "400": {
              "description": "Bad request"
            }
          }
        }
      }
    },
    "/categories/{id}": {
      "delete": {
        "summary": "Delete Category",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Category deleted successfully"
          },
          "404": {
            "description": "Category not found"
          }
        }
      }
    }
  }
}
